/*
 *

* Each new term in the Fibonacci sequence is generated by adding the previous two terms.
* By starting with 1 and 2, the first 10 terms will be:
*
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*
* By considering the terms in the Fibonacci sequence whose values do not exceed four million,
* find the sum of the even-valued terms.
 *
 *
 * */
use helper;
// use instead of mod, because the functions are decleared elsewhere
// see: https://stackoverflow.com/questions/57592848/rust-file-not-found-for-module-error-for-file-in-same-directory

pub fn main() {
        let limit = 46;
        // TODO: find better name for array
        let mut array: Vec<u32> = Vec::new();
        for index in 0 .. limit+1 {
            println!("Testing for {}", index);
            if n % 2 ==0 {
                let number: u32 = fib(n);
                println!("{}", index); //Just for test
                array.push(index);
            } // end of if-loop
        } // end of for-loop
    // Make something here to add all the elements of array

} // end of main()
